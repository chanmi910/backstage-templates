apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: dotnet-basic-on-openshift
  title: .NET app for OpenShift
  description: Create a .NET web app for OpenShift
  tags:
    - dotnet
    - azure-pipelines
    - sonarqube
    - openshift
    - argocd
spec:
  owner: piomin
  system: microservices
  type: service

  parameters:
    - title: Provide information about the new component
      required:
        - orgName
        - appName
        - domainName
        - repoBranchName
        - apiPath
        - namespace
        - description
        - registryUrl
        - clusterDomain
        - dotnetVersion
      properties:
        orgName:
          title: Organization name
          type: string
          default: piomin
        appName:
          title: App name
          type: string
          default: sample-dotnet-api
        domainName:
          title: Name of the domain object
          type: string
          default: Person
        repoBranchName:
          title: Name of the branch in the Git repository
          type: string
          default: master
        apiPath:
          title: REST API path
          type: string
          default: /api/v1
        namespace:
          title: The target namespace on Kubernetes
          type: string
          default: demo
        description:
          title: Description
          type: string
          default: Spring Boot App Generated by Backstage
        registryUrl:
          title: Registry URL
          type: string
          default: image-registry.openshift-image-registry.svc:5000
        clusterDomain:
          title: OpenShift Cluster Domain
          type: string
          default: apps.piomin.eastus.aroapp.io
        dotnetVersion:
          title: .NET Version
          type: string
          default: net9.0
  steps:
    - id: sourceCodeTemplate
      name: Generating the Source Code Component
      action: fetch:template
      input:
        url: ./skeleton
        values:
          orgName: ${{ parameters.orgName }}
          appName: ${{ parameters.appName }}
          domainName: ${{ parameters.domainName }}
          apiPath: ${{ parameters.apiPath }}
          namespace: ${{ parameters.namespace }}
          clusterDomain: ${{ parameters.clusterDomain }}
          dotnetVersion: ${{ parameters.dotnetVersion }}

    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.appName }}
        defaultBranch: ${{ parameters.repoBranchName }}
        protectDefaultBranch: false
        repoVisibility: public

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

#    - id: configCodeTemplate-1
#      name: Generating the Config Code Component
#      action: fetch:template
#      input:
#        url: ../../skeletons/argocd/manifests
#        values:
#          orgName: ${{ parameters.orgName }}
#          appName: ${{ parameters.appName }}
#          registryUrl: ${{ parameters.registryUrl }}
#          namespace: ${{ parameters.namespace }}
#          repoBranchName: ${{ parameters.repoBranchName }}
#        targetPath: ./gitops/manifests
#
#    - id: configCodeTemplate-2
#      name: Adding AI Component to the Config Code Component
#      action: fetch:template
#      input:
#        url: ../../skeletons/argocd/ai
#        values:
#          orgName: ${{ parameters.orgName }}
#          appName: ${{ parameters.appName }}
#          registryUrl: ${{ parameters.registryUrl }}
#          namespace: ${{ parameters.namespace }}
#          repoBranchName: ${{ parameters.repoBranchName }}
#          aiModelName: ${{ parameters.aiModelName }}
#          aiModelTag: ${{ parameters.aiModelTag }}
#          aiModelNamespace: ${{ parameters.namespace }}
#        targetPath: ./gitops/manifests
#
#    - id: publish-config
#      name: Publishing to the Config Code Repository
#      action: publish:github
#      input:
#        allowedHosts: ['github.com']
#        description: ${{ parameters.description }}
#        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.appName }}-config
#        defaultBranch: ${{ parameters.repoBranchName }}
#        sourcePath: ./gitops
#        repoVisibility: public
#
#    - id: create-argocd-resources
#      name: Create ArgoCD Resources
#      action: argocd:create-resources
#      input:
#        appName: ${{ parameters.appName }}
#        argoInstance: main
#        namespace: ${{ parameters.namespace }}
#        repoUrl: https://github.com/${{ parameters.orgName }}/${{ parameters.appName }}-config.git
#        path: 'manifests'

  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the Source Code in DevSpaces
        url: https://devspaces.${{ parameters.clusterDomain }}#${{ steps.publish.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}

